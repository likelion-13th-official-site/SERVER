name: Deploy to EC2

on:
  push:
    branches:
      - master  # 🚀 'master' 브랜치에 push될 때 실행
  pull_request:
    branches:
      - master # PR이 'master' 브랜치에 merge될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 🔹 레포지토리 체크아웃
      - name: 🔹 Checkout Repository
        uses: actions/checkout@v3

      # 🛠️ JDK 17 설치
      - name: 🛠️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 🛠️ Gradle로 JAR 파일 빌드
      - name: 🛠️ Build JAR with Gradle
        run: |
          chmod +x gradlew  # Gradle 실행 권한 부여
          ./gradlew build -x test  # 테스트 제외하고 빌드

      # 🛠️ Docker 이미지 빌드 및 Docker Hub에 Push
      - name: 🛠️ Build and Push Docker Image
        run: |
          docker build -t blueredorange/likelion13th-site .
          docker tag blueredorange/likelion13th-site blueredorange/likelion13th-site:latest
          docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
          docker push blueredorange/likelion13th-site:latest

      # 🛠️ EC2 SSH 키 저장 & 권한 설정
      - name: 🛠️ Save SSH Key and Set Permissions
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ls -al ~/.ssh  # 디버깅용 (정상적으로 생성되었는지 확인)

      # 🚀 EC2에 SSH 접속 후 배포 실행
      - name: 🚀 Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/spring-postgres

            echo "🔄 최신 코드 Pull"
            git pull origin master

            echo "🛠️ 도커 컨테이너 중지"
            docker-compose down

            echo "🛠️ 최신 Docker 이미지 Pull"
            docker pull blueredorange/likelion13th-site:latest

            echo "🛠️ DB 먼저 실행"
            docker-compose up -d postgres-db
            sleep 10  # 🚀 DB가 먼저 실행될 시간을 줌

            echo "🚀 Spring 애플리케이션 실행"
            docker-compose up -d spring-app

            echo "🛠️ 실행 중인 컨테이너 확인"
            docker ps
